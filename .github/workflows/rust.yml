name: Wolf Pack / Rust

on:
  push:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  pre-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
      - name: Get version
        id: get-version
        run: echo "::set-output name=version::$(cat Cargo.toml | grep version | head -n 1 | cut -d'"' -f2)"
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          release_name: Release ${{ steps.get-version.outputs.version }}
          body: ${{ github.event.head_commit.message }}
  windows-build:
    runs-on: windows-latest
    needs: pre-release
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
        with:
          path: 'wolf-pack'
      - uses: actions/checkout@v2
        name: Checkout cubik
        with:
          repository: 'djandries/cubik'
          path: 'cubik'
          ref: 'master'
          # TODO: Remove token once public
          token: ${{ secrets.PAT }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            wolf-pack/target
            ~/.cargo/registry
          key: ${{ runner.os }}-build
      - name: Build
        run: cargo build --release
        working-directory: 'wolf-pack'
      - name: Make Windows installer
        run: makensis /DVERSION=${{ needs.pre-release.outputs.version }} install\win.nsi
        working-directory: 'wolf-pack'
      - name: Upload Windows Installer Asset
        id: upload-release-asset 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/WolfPack-Windows-Install.exe
          asset_name: WolfPack-${{ needs.pre-release.outputs.version }}-Windows-Install.exe
          tag: ${{ needs.pre-release.outputs.version }}
          overwrite: true
          
  linux-build:
    runs-on: ubuntu-latest
    needs: pre-release
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
        with:
          path: 'wolf-pack'
      - uses: actions/checkout@v2
        name: Checkout cubik
        with:
          repository: 'djandries/cubik'
          path: 'cubik'
          ref: 'master'
          # TODO: Remove token once public
          token: ${{ secrets.PAT }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            wolf-pack/target
            ~/.cargo/registry
            ~/.cargo/bin
          key: ${{ runner.os }}-build
      - name: Install alsa lib
        run: sudo apt-get install libasound2-dev
      - name: Install cargo-bundle
        run: cargo install cargo-bundle
      - name: Set package version
      - name: Delete blender models
        run: find . -name '*.blend' -delete
      - name: Build and bundle
        run: cargo bundle --release
        working-directory: 'wolf-pack'
      - name: Make tarball
        run: tar -czf wolf-pack.tar.gz ./target/release/wolf-pack models/ fonts/ audio/ textures/
        working-directory: 'wolf-pack'
      - name: Upload deb
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/target/release/bundle/deb/wolf-pack_${{ needs.pre-release.outputs.version }}_amd64.deb
          asset_name: WolfPack-${{ needs.pre-release.outputs.version }}-Debian.deb
          tag: ${{ needs.pre-release.outputs.version }}
          overwrite: true
      - name: Upload tarball
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/wolf-pack.tar.gz
          asset_name: WolfPack-${{ needs.pre-release.outputs.version }}-Linux.tar.gz
          tag: ${{ needs.pre-release.outputs.version }}
          overwrite: true

  macos-build:
    runs-on: macos-latest
    needs: pre-release
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
        with:
          path: 'wolf-pack'
      - uses: actions/checkout@v2
        name: Checkout cubik
        with:
          repository: 'djandries/cubik'
          path: 'cubik'
          ref: 'master'
          # TODO: Remove token once public
          token: ${{ secrets.PAT }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            wolf-pack/target
            ~/.cargo/registry
            ~/.cargo/bin
            node_modules
          key: ${{ runner.os }}-build
      - name: Install cargo-bundle
        run: cargo install cargo-bundle
      - name: Set package version
        run: sed -i -e 's/^version = .*/version = "${{ needs.pre-release.outputs.version }}"/' wolf-pack/Cargo.toml
      - name: Delete blender models
        run: find . -name '*.blend' -delete
      - name: Build and bundle
        run: cargo bundle --release
        working-directory: 'wolf-pack'
      - name: Install create-dmg
        run: npm install create-dmg
      - name: Make DMG image
        run: ../node_modules/.bin/create-dmg "target/release/bundle/osx/Wolf Pack.app" || true
        working-directory: 'wolf-pack'
      - name: Upload DMG asset
        id: upload-release-asset 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/Wolf Pack ${{ needs.pre-release.outputs.version }}.dmg
          asset_name: WolfPack-${{ needs.pre-release.outputs.version }}-MacOS-Install.dmg
          tag: ${{ needs.pre-release.outputs.version }}
          overwrite: true

name: Wolf Pack / Rust

on:
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always

jobs:
  windows-build:
    if: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
        with:
          path: 'wolf-pack'
      - uses: actions/checkout@v2
        name: Checkout cubik
        with:
          repository: 'djandries/cubik'
          path: 'cubik'
          ref: 'master'
          # TODO: Remove token once public
          token: ${{ secrets.PAT }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            wolf-pack/target
            ~/.cargo/registry
          key: ${{ runner.os }}-build
      - name: Build
        run: cargo build --release
        working-directory: 'wolf-pack'
      - name: Make Windows installer
        run: makensis /DVERSION=${{ github.event.release.tag_name }} install\win.nsi
        working-directory: 'wolf-pack'
      - name: Upload Windows Installer Asset
        id: upload-release-asset 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/WolfPack-Windows-Install.exe
          asset_name: WolfPack-${{ github.event.release.tag_name }}-Windows-Install.exe
          tag: ${{ github.event.release.tag_name }}
          overwrite: true
          
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
        with:
          path: 'wolf-pack'
      - uses: actions/checkout@v2
        name: Checkout cubik
        with:
          repository: 'djandries/cubik'
          path: 'cubik'
          ref: 'master'
          # TODO: Remove token once public
          token: ${{ secrets.PAT }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            wolf-pack/target
            ~/.cargo/registry
            ~/.cargo/bin
          key: ${{ runner.os }}-build
      - name: Install alsa lib
        run: sudo apt-get install libasound2-dev
      - name: Install cargo-bundle
        run: cargo install cargo-bundle
      - name: Set package version
        run: sed -i -e 's/^version = .*/version = "${{ github.event.release.tag_name }}"/' wolf-pack/Cargo.toml
      - name: Delete blender models
        run: find . -name '*.blend' -delete
      - name: Build and bundle
        run: cargo bundle --release
        working-directory: 'wolf-pack'
      - name: Make tarball
        run: tar -czf wolf-pack.tar.gz ./target/release/wolf-pack models/ fonts/ audio/ textures/
        working-directory: 'wolf-pack'
      - name: Upload deb
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/target/release/bundle/deb/wolf-pack.deb
          asset_name: WolfPack-${{ github.event.release.tag_name }}-Debian.deb
          tag: ${{ github.event.release.tag_name }}
          overwrite: true
      - name: Upload tarball
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/wolf-pack.tar.gz
          asset_name: WolfPack-${{ github.event.release.tag_name }}-Linux.tar.gz
          tag: ${{ github.event.release.tag_name }}
          overwrite: true

  macos-build:
    runs-on: macos-latest
    if: false
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
        with:
          path: 'wolf-pack'
      - uses: actions/checkout@v2
        name: Checkout cubik
        with:
          repository: 'djandries/cubik'
          path: 'cubik'
          ref: 'master'
          # TODO: Remove token once public
          token: ${{ secrets.PAT }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            wolf-pack/target
            ~/.cargo/registry
            ~/.cargo/bin
            node_modules
          key: ${{ runner.os }}-build
      - name: Install cargo-bundle
        run: cargo install cargo-bundle
      - name: Set package version
        run: sed -i -e 's/^version = .*/version = "${{ github.event.release.tag_name }}"/' wolf-pack/Cargo.toml
      - name: Delete blender models
        run: find . -name '*.blend' -delete
      - name: Build and bundle
        run: cargo bundle --release
        working-directory: 'wolf-pack'
      - name: Install create-dmg
        run: npm install create-dmg
      - name: Make DMG image
        run: ../node_modules/.bin/create-dmg "target/release/bundle/osx/Wolf Pack.app" || true
        working-directory: 'wolf-pack'
      - name: Upload DMG asset
        id: upload-release-asset 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wolf-pack/Wolf Pack ${{ github.event.release.tag_name }}.dmg
          asset_name: WolfPack-${{ github.event.release.tag_name }}-MacOS-Install.dmg
          tag: ${{ github.event.release.tag_name }}
          overwrite: true
